16143/31068
31068/16143
82019 / 31068
1 / NA
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
MLEs <- tibble(model = c("SMH-SY", "SSH-SY", "SMG-SY", "SSG-SY",
"CMH-SY", "CSH-SY", "CMG-SY", "CSG-SY"),
MLE = c(16143, NA, NA, NA, 31068, NA, NA, NA))
BFs <- lapply(1:nrow(MLEs), function (x) sapply(1:nrow(MLEs), function (y) {MLEs[x,2] / MLEs[y,2]}))
names(BFs) <- MLEs$model
BFs_table <- tibble(model_2 = MLEs$model, BFs)
BFs_table
BFs_table <- tibble(model_2 = MLEs$model, unlist(BFs))
BFs_table <- tibble(model_2 = MLEs$model, BFs)
unnest(BFs)
BFs_table <- tibble(model_2 = MLEs$model, unnest(BFs))
?ldply
as_tibble_row(BFs)
as_tibble(BFs)
BFs[[1]]
class(BFs[[1]])
BFs <- lapply(1:nrow(MLEs), function (x) vapply(1:nrow(MLEs), function (y) {MLEs[x,2] / MLEs[y,2]}))
BFs <- lapply(1:nrow(MLEs), function (x) sapply(1:nrow(MLEs), function (y) {MLEs[x,2] / MLEs[y,2]}))
unlist(BFs[[1]])
class(unlist(BFs[[1]]))
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] / MLEs[y,2]})))
BFs
length(BFs[[1]])
as_tibble(BFs)
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] / MLEs[y,2]})))
names(BFs) <- MLEs$model
as_tibble(BFs)
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] / MLEs[y,2]})))
names(BFs) <- MLEs$model
BFs_table <- tibble(model_2 = MLEs$model, BFs)
BFs_table
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs))
BFs_table
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] / MLEs[y,2]})))
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs, names(MLEs$model)))
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs,colnames(MLEs$model)))
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs, names = MLEs$model))
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs, .name_repair = MLEs$model))
?as_tibble
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs, column_name = MLEs$model))
?make.names
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs, .name_repair = make.names(MLEs$model)))
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] / MLEs[y,2]})))
names(BFs) <- MLEs$model
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs))
BFs_table
BFs_table <- tibble(model_2 = MLEs$model, as_tibble(BFs, .name_repair = "universal"))
BFs_table
View(BFs_table)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(kableExtra)
MLEs <- tibble(model = c("SMH-SY", "SSH-SY", "SMG-SY", "SSG-SY",
"CMH-SY", "CSH-SY", "CMG-SY", "CSG-SY"),
MLE = c(-16143, NA, NA, NA, 31068, 82019, NA, NA))
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] - MLEs[y,2]})))
names(BFs) <- MLEs$model
BFs_table <- tibble(`Site model` = MLEs$model, as_tibble(BFs))
View(BFs_table)
as_tibble_row(BFs)
as_tibble(BFs)
t(as_tibble(BFs))
names(t(as_tibble(BFs))) <- MLEs$model
MLEs <- tibble(model = c("SMH-SY", "SSH-SY", "SMG-SY", "SSG-SY",
"CMH-SY", "CSH-SY", "CMG-SY", "CSG-SY"),
MLE = c(-16143, NA, NA, NA, 31068, 82019, NA, NA))
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] - MLEs[y,2]})))
names(BFs) <- MLEs$model
BFs_table <- tibble(t(as_tibble(BFs)))
names(BFs_table) <- c("Site model", MLEs(model))
MLEs <- tibble(model = c("SMH-SY", "SSH-SY", "SMG-SY", "SSG-SY",
"CMH-SY", "CSH-SY", "CMG-SY", "CSG-SY"),
MLE = c(-16143, NA, NA, NA, 31068, 82019, NA, NA))
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] - MLEs[y,2]})))
names(BFs) <- MLEs$model
BFs_table <- tibble(t(as_tibble(BFs)))
names(BFs_table) <- c("Site model", MLEs$model)
MLEs <- tibble(model = c("SMH-SY", "SSH-SY", "SMG-SY", "SSG-SY",
"CMH-SY", "CSH-SY", "CMG-SY", "CSG-SY"),
MLE = c(-16143, NA, NA, NA, 31068, 82019, NA, NA))
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] - MLEs[y,2]})))
names(BFs) <- MLEs$model
BFs_table <- tibble(t(as_tibble(BFs)))
BFs_table
MLEs <- tibble(model = c("SMH-SY", "SSH-SY", "SMG-SY", "SSG-SY",
"CMH-SY", "CSH-SY", "CMG-SY", "CSG-SY"),
MLE = c(-16143, NA, NA, NA, 31068, 82019, NA, NA))
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {MLEs[x,2] - MLEs[y,2]})))
names(BFs) <- MLEs$model
BFs_table <- tibble(`Site model` = MLEs$model, as_tibble(BFs))
BFs_table
BFs_table <- tibble(`Site model` = MLEs$model, as_tibble(BFs)) %>% t
BFs_table
?transpose
BFs_table <- tibble(`Site model` = MLEs$model, as_tibble(BFs)) %>% transponse
BFs_table <- tibble(`Site model` = MLEs$model, as_tibble(BFs)) %>% transpose
BFs_table
BFs_table <- tibble(`Site model` = MLEs$model, as_tibble(BFs))
?t
BFs_df <- as_tibble(cbind(nms = names(BFs_table), t(BFs_table)))
View(BFs_df)
BFs_df <- as_tibble(cbind(names(BFs_table), t(BFs_table)))
BFs_df
?pivot_wider
BFs_df <- pivot_wider(BFs_table, names_from = `Site model`, values_from = MLEs$model)
BFs_df
?rbind
df <- rbind(BFs)
df
df <- bind_rows(BFs)
df <- bind_rows(BFs, .name_repair = "unique")
?bind_rows
BFs <- lapply(1:nrow(MLEs), function (x) unlist(sapply(1:nrow(MLEs), function (y) {bf <- MLEs[x,2] - MLEs[y,2];
names(bf) <- MLEs[y,1];
bf})))
BFs[[1]]
names(BFs) <- MLEs$model
bind_rows(BFs)
BFs_table <- tibble(`Site model` = MLEs$model, bind_rows(BFs))
BFs_table
-14866 - -14830
log(0.5)
log(0.001)
log(0.00001)
log(0.0000000000000000000000001)
exp(81000)
exp(-16143)
exp(82019)
shiny::runApp('Github/freq_distribution_of_phonological_segments/Frontiers_submission_zipped_supp/S4-S5_data_code_and_viewer/S4_data_viewer')
library(tinytex)
tinytex::tlmgr_update()
tinytex::is_tinytex()
c(1,2)
sum(c(1,2))
c(1,2) magrittr::%>% sum()
dist_pl <- aus_displ[[242]]
devtools::install_github("JaydenM-C/phonfreq")
pl_xmin_min_p * 100
0.011 * 100
0.011 / 100
0.011 * 1000
0.011 * 10000
1 / 100
1 / 110
Ausphonlex::get_aus_ID("Miriwoong")
aus <- ausphonlex_v0.6.3
library(Ausphonlex)
library(Ausphonlex)
aus <- ausphonlex_v0.6.3
get_aus_ID("Miriwoong")
60 * 2.5
65 * 2.5
564009 - 348287
988213 - 568402
library(ape)
library(treeio)
library(tidytree)
library(tidyverse)
library(phytools)
### COGNATES ONLY VS PREVIOUS TREES ###
# Read trees as ape's S3 phylo class
cogs    <- ape::read.nexus("../trees/WPN_cogsonly_2020-11-18_MCCT.tree")
bba2018 <- ape::read.nexus("../trees/BBA2018_Pny_MCCT.nex")
bba2018 <- ape::drop.tip(bba2018, setdiff(bba2018$tip.label, cogs$tip.label))
# Read trees as treeio's S4 phylo class
cogs_df    <- treeio::read.beast("../trees/WPN_cogsonly_2020-11-18_MCCT.tree") %>%
treeio::as_tibble(cogs_df) %>% full_join(tidytree::as_tibble(cogs))
bba2018_df <- treeio::read.beast("../trees/BBA2018_Pny_MCCT.nex")
bba2018_df <- treeio::drop.tip(bba2018_df, setdiff(bba2018_df@phylo$tip.label, cogs$tip.label)) %>%
treeio::as_tibble(bba2018_df) %>% full_join(tidytree::as_tibble(bba2018))
class(bba2018_df$posterior) <- "numeric"
# Claire Bowern's 2015 tree
cb2015 <- ape::read.nexus("../trees/PNY10_285.(time).sum.tree")
cb2015 <- ape::drop.tip(cb2015, setdiff(cb2015$tip.label, cogs$tip.label))
cb2015_df <- treeio::read.beast("../trees/PNY10_285.(time).sum.tree")
cb2015_df <- treeio::drop.tip(cb2015_df, setdiff(cb2015_df@phylo$tip.label, cogs$tip.label)) %>%
treeio::as_tibble(cb2015_df) %>% full_join(tidytree::as_tibble(cb2015))
# CB's 2015 tree vs BBA's 2018 tree
cb2015_vs_bba2018 <- cophylo(cb2015, bba2018)
cairo_pdf("../fig/cb2015_vs_bba2018.pdf", height = 10, width = 6.18)
plot.cophylo(cb2015_vs_bba2018)
par(mar=c(0,0,1,0))
title("Bowern (2015) vs Bouckaert, Bowern and Atkinson (2018)")
nodelabels.cophylo(round(cb2015_df$posterior, 2), cb2015_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(bba2018_df$posterior, 2), bba2018_df$node, cex = .7, adj = 0, which = "right")
dev.off()
# Cogs tree vs BBA2018
bba2018_vs_cogs <- cophylo(cogs, bba2018)
cairo_pdf("../fig/cogs_vs_bba2018.pdf", height = 10, width = 8)
plot.cophylo(bba2018_vs_cogs)
par(mar=c(0,0,1,0))
title("Cognates only vs Bouckaert, Bowern and Atkinson (2018)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(bba2018_df$posterior,2), bba2018_df$node, cex = .7, adj = 1, which = "right")
dev.off()
# Cogs tree vs CB2015
# Cogs tree seems closer to 2018 tree than 2015 tree
cb2015_vs_cogs <- cophylo(cogs, cb2015)
cairo_pdf("../fig/cogs_vs_cb2015.pdf", height = 10, width = 6.18)
plot.cophylo(cb2015_vs_cogs)
par(mar=c(0,0,1,0))
title("Cognates only vs Bowern (2015)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(cb2015_df$posterior,2), cb2015_df$node, cex = .7, adj = 1, which = "right")
dev.off()
### READING MORE TREES ###
## All data ##
linked_all <- ape::read.nexus("../trees/WPN_linked_alldata_2020-11-18_ch7-10_MCCT.tree")
sep_all_cogs <- ape::read.nexus("../trees/WPN_separate_alldata_2020-11-18_ch2_7.WPN_cognates.MCCT.tree")
sep_all_phon <- ape::read.nexus("../trees/WPN_separate_alldata_2020-11-18_ch2_7.default.MCCT.tree")
linked_all_df <- treeio::read.beast("../trees/WPN_linked_alldata_2020-11-18_ch7-10_MCCT.tree.trees") %>%
treeio::as_tibble(linked_all_df) %>% full_join(tidytree::as_tibble(linked_all))
sep_all_cogs_df <- treeio::read.beast("../trees/WPN_separate_alldata_2020-11-18_ch2_7.WPN_cognates.MCCT.trees") %>%
treeio::as_tibble(sep_all_cogs_df) %>% full_join(tidytree::as_tibble(sep_all_cogs))
sep_all_phon_df <- treeio::read.beast("../trees/WPN_separate_alldata_2020-11-18_ch2_7.default.MCCT.trees") %>%
treeio::as_tibble(sep_all_phon_df) %>% full_join(tidytree::as_tibble(sep_all_phon))
## Binary biphone data removed ##
linked <- ape::read.nexus("../trees/WPN_linked_2020-11-03_MCCT.trees")
sep_cogs <- ape::read.nexus("../trees/WPN_separate_2020-11-18.WPN_cognates.MCCT.trees")
sep_phon <- ape::read.nexus("../trees/WPN_separate_2020-11-18.WPN_phonotactics.MCCT.trees")
linked_df <- treeio::read.beast("../trees/WPN_linked_2020-11-03_MCCT.trees") %>%
treeio::as_tibble(linked_df) %>% full_join(tidytree::as_tibble(linked))
sep_cogs_df <- treeio::read.beast("../trees/WPN_separate_2020-11-18.WPN_cognates.MCCT.trees") %>%
treeio::as_tibble(sep_cogs_df) %>% full_join(tidytree::as_tibble(sep_cogs))
sep_phon_df <- treeio::read.beast("../trees/WPN_separate_2020-11-18.WPN_phonotactics.MCCT.trees") %>%
treeio::as_tibble(sep_phon_df) %>% full_join(tidytree::as_tibble(sep_phon))
#### MORE PLOTTING ####
## Cognates only vs all data, linked model ##
cogs_vs_linked_all <- cophylo(cogs, linked_all)
cairo_pdf("../fig/cogs_vs_linked_all.pdf", height = 10, width = 8)
plot.cophylo(cogs_vs_linked_all)
par(mar=c(0,0,1,0))
title("Cognates vs. all data linked")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
bba2018_vs_linked_all <- cophylo(bba2018, linked_all)
cairo_pdf("../fig/bba2018_vs_linked_all.pdf", height = 10, width = 6.18)
plot.cophylo(bba2018_vs_linked_all)
par(mar=c(0,0,1,0))
title("Bouckaert, Bowern and Atkinson (2018) vs. all data linked")
nodelabels.cophylo(round(bba2018_df$posterior,2), bba2018_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## All data separate: cognates element vs phonotactics element ##
sep_all_cogs_vs_sep_all_phon <- cophylo(sep_all_cogs, sep_all_phon)
cairo_pdf("../fig/separate_cogs_vs_phonotactics_alldata.pdf", height = 10, width = 6.18)
plot.cophylo(sep_all_cogs_vs_sep_all_phon)
par(mar=c(0,0,1,0))
title("Separate (all data): cognates element vs phonotactics element")
nodelabels.cophylo(round(sep_all_cogs_df$posterior, 2), sep_all_cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(sep_all_phon_df$posterior, 2), sep_all_phon_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## Cognates only vs linked model (binary biphone data removed)
cogs_vs_linked <- cophylo(cogs, linked)
cairo_pdf("../fig/cogs_vs_linked.pdf", height = 10, width = 6.18)
plot.cophylo(cogs_vs_linked)
par(mar=c(0,0,1,0))
title("Cognates vs. linked model (binary biphone data removed)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## Linked models with vs without binary biphone data
linked_all_vs_linked <- cophylo(linked_all, linked)
cairo_pdf("../fig/linked_all_vs_linked.pdf", height = 10, width = 6.18)
plot.cophylo(linked_all_vs_linked)
par(mar=c(0,0,1,0))
title("Linked models with vs without binary biphone data")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_df$posterior,2), linked_df$node, cex = .7, adj = 1, which = "right")
dev.off()
setwd("~/Desktop/Github/PN_treebuilding/Thesis_chapter/R")
library(ape)
library(treeio)
library(tidytree)
library(tidyverse)
library(phytools)
### COGNATES ONLY VS PREVIOUS TREES ###
# Read trees as ape's S3 phylo class
cogs    <- ape::read.nexus("../trees/WPN_cogsonly_2020-11-18_MCCT.tree")
bba2018 <- ape::read.nexus("../trees/BBA2018_Pny_MCCT.nex")
bba2018 <- ape::drop.tip(bba2018, setdiff(bba2018$tip.label, cogs$tip.label))
# Read trees as treeio's S4 phylo class
cogs_df    <- treeio::read.beast("../trees/WPN_cogsonly_2020-11-18_MCCT.tree") %>%
treeio::as_tibble(cogs_df) %>% full_join(tidytree::as_tibble(cogs))
bba2018_df <- treeio::read.beast("../trees/BBA2018_Pny_MCCT.nex")
bba2018_df <- treeio::drop.tip(bba2018_df, setdiff(bba2018_df@phylo$tip.label, cogs$tip.label)) %>%
treeio::as_tibble(bba2018_df) %>% full_join(tidytree::as_tibble(bba2018))
class(bba2018_df$posterior) <- "numeric"
# Claire Bowern's 2015 tree
cb2015 <- ape::read.nexus("../trees/PNY10_285.(time).sum.tree")
cb2015 <- ape::drop.tip(cb2015, setdiff(cb2015$tip.label, cogs$tip.label))
cb2015_df <- treeio::read.beast("../trees/PNY10_285.(time).sum.tree")
cb2015_df <- treeio::drop.tip(cb2015_df, setdiff(cb2015_df@phylo$tip.label, cogs$tip.label)) %>%
treeio::as_tibble(cb2015_df) %>% full_join(tidytree::as_tibble(cb2015))
# CB's 2015 tree vs BBA's 2018 tree
cb2015_vs_bba2018 <- cophylo(cb2015, bba2018)
cairo_pdf("../fig/cb2015_vs_bba2018.pdf", height = 10, width = 6.18)
plot.cophylo(cb2015_vs_bba2018)
par(mar=c(0,0,1,0))
title("Bowern (2015) vs Bouckaert, Bowern and Atkinson (2018)")
nodelabels.cophylo(round(cb2015_df$posterior, 2), cb2015_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(bba2018_df$posterior, 2), bba2018_df$node, cex = .7, adj = 0, which = "right")
dev.off()
# Cogs tree vs BBA2018
bba2018_vs_cogs <- cophylo(cogs, bba2018)
cairo_pdf("../fig/cogs_vs_bba2018.pdf", height = 10, width = 8)
plot.cophylo(bba2018_vs_cogs)
par(mar=c(0,0,1,0))
title("Cognates only vs Bouckaert, Bowern and Atkinson (2018)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(bba2018_df$posterior,2), bba2018_df$node, cex = .7, adj = 1, which = "right")
dev.off()
# Cogs tree vs CB2015
# Cogs tree seems closer to 2018 tree than 2015 tree
cb2015_vs_cogs <- cophylo(cogs, cb2015)
cairo_pdf("../fig/cogs_vs_cb2015.pdf", height = 10, width = 6.18)
plot.cophylo(cb2015_vs_cogs)
par(mar=c(0,0,1,0))
title("Cognates only vs Bowern (2015)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(cb2015_df$posterior,2), cb2015_df$node, cex = .7, adj = 1, which = "right")
dev.off()
### READING MORE TREES ###
## All data ##
linked_all <- ape::read.nexus("../trees/WPN_linked_alldata_2020-11-18_ch7-10_MCCT.tree")
sep_all_cogs <- ape::read.nexus("../trees/WPN_separate_alldata_2020-11-18_ch2_7.WPN_cognates.MCCT.tree")
sep_all_phon <- ape::read.nexus("../trees/WPN_separate_alldata_2020-11-18_ch2_7.default.MCCT.tree")
linked_all_df <- treeio::read.beast("../trees/WPN_linked_alldata_2020-11-18_ch7-10_MCCT.tree.trees") %>%
treeio::as_tibble(linked_all_df) %>% full_join(tidytree::as_tibble(linked_all))
sep_all_cogs_df <- treeio::read.beast("../trees/WPN_separate_alldata_2020-11-18_ch2_7.WPN_cognates.MCCT.trees") %>%
treeio::as_tibble(sep_all_cogs_df) %>% full_join(tidytree::as_tibble(sep_all_cogs))
sep_all_phon_df <- treeio::read.beast("../trees/WPN_separate_alldata_2020-11-18_ch2_7.default.MCCT.trees") %>%
treeio::as_tibble(sep_all_phon_df) %>% full_join(tidytree::as_tibble(sep_all_phon))
## Binary biphone data removed ##
linked <- ape::read.nexus("../trees/WPN_linked_2020-11-03_MCCT.trees")
sep_cogs <- ape::read.nexus("../trees/WPN_separate_2020-11-18.WPN_cognates.MCCT.trees")
sep_phon <- ape::read.nexus("../trees/WPN_separate_2020-11-18.WPN_phonotactics.MCCT.trees")
linked_df <- treeio::read.beast("../trees/WPN_linked_2020-11-03_MCCT.trees") %>%
treeio::as_tibble(linked_df) %>% full_join(tidytree::as_tibble(linked))
sep_cogs_df <- treeio::read.beast("../trees/WPN_separate_2020-11-18.WPN_cognates.MCCT.trees") %>%
treeio::as_tibble(sep_cogs_df) %>% full_join(tidytree::as_tibble(sep_cogs))
sep_phon_df <- treeio::read.beast("../trees/WPN_separate_2020-11-18.WPN_phonotactics.MCCT.trees") %>%
treeio::as_tibble(sep_phon_df) %>% full_join(tidytree::as_tibble(sep_phon))
#### MORE PLOTTING ####
## Cognates only vs all data, linked model ##
cogs_vs_linked_all <- cophylo(cogs, linked_all)
cairo_pdf("../fig/cogs_vs_linked_all.pdf", height = 10, width = 8)
plot.cophylo(cogs_vs_linked_all)
par(mar=c(0,0,1,0))
title("Cognates vs. all data linked")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
bba2018_vs_linked_all <- cophylo(bba2018, linked_all)
cairo_pdf("../fig/bba2018_vs_linked_all.pdf", height = 10, width = 6.18)
plot.cophylo(bba2018_vs_linked_all)
par(mar=c(0,0,1,0))
title("Bouckaert, Bowern and Atkinson (2018) vs. all data linked")
nodelabels.cophylo(round(bba2018_df$posterior,2), bba2018_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## All data separate: cognates element vs phonotactics element ##
sep_all_cogs_vs_sep_all_phon <- cophylo(sep_all_cogs, sep_all_phon)
cairo_pdf("../fig/separate_cogs_vs_phonotactics_alldata.pdf", height = 10, width = 6.18)
plot.cophylo(sep_all_cogs_vs_sep_all_phon)
par(mar=c(0,0,1,0))
title("Separate (all data): cognates element vs phonotactics element")
nodelabels.cophylo(round(sep_all_cogs_df$posterior, 2), sep_all_cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(sep_all_phon_df$posterior, 2), sep_all_phon_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## Cognates only vs linked model (binary biphone data removed)
cogs_vs_linked <- cophylo(cogs, linked)
cairo_pdf("../fig/cogs_vs_linked.pdf", height = 10, width = 6.18)
plot.cophylo(cogs_vs_linked)
par(mar=c(0,0,1,0))
title("Cognates vs. linked model (binary biphone data removed)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## Linked models with vs without binary biphone data
linked_all_vs_linked <- cophylo(linked_all, linked)
cairo_pdf("../fig/linked_all_vs_linked.pdf", height = 10, width = 6.18)
plot.cophylo(linked_all_vs_linked)
par(mar=c(0,0,1,0))
title("Linked models with vs without binary biphone data")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_df$posterior,2), linked_df$node, cex = .7, adj = 1, which = "right")
dev.off()
library(ape)
library(treeio)
library(tidytree)
library(tidyverse)
library(phytools)
### COGNATES ONLY VS PREVIOUS TREES ###
# Read trees as ape's S3 phylo class
cogs    <- ape::read.nexus("../trees/WPN_cogsonly_2020-11-18_MCCT.tree")
bba2018 <- ape::read.nexus("../trees/BBA2018_Pny_MCCT.nex")
bba2018 <- ape::drop.tip(bba2018, setdiff(bba2018$tip.label, cogs$tip.label))
# Read trees as treeio's S4 phylo class
cogs_df    <- treeio::read.beast("../trees/WPN_cogsonly_2020-11-18_MCCT.tree") %>%
treeio::as_tibble(cogs_df) %>% full_join(tidytree::as_tibble(cogs))
bba2018_df <- treeio::read.beast("../trees/BBA2018_Pny_MCCT.nex")
bba2018_df <- treeio::drop.tip(bba2018_df, setdiff(bba2018_df@phylo$tip.label, cogs$tip.label)) %>%
treeio::as_tibble(bba2018_df) %>% full_join(tidytree::as_tibble(bba2018))
class(bba2018_df$posterior) <- "numeric"
# Claire Bowern's 2015 tree
cb2015 <- ape::read.nexus("../trees/PNY10_285.(time).sum.tree")
cb2015 <- ape::drop.tip(cb2015, setdiff(cb2015$tip.label, cogs$tip.label))
cb2015_df <- treeio::read.beast("../trees/PNY10_285.(time).sum.tree")
cb2015_df <- treeio::drop.tip(cb2015_df, setdiff(cb2015_df@phylo$tip.label, cogs$tip.label)) %>%
treeio::as_tibble(cb2015_df) %>% full_join(tidytree::as_tibble(cb2015))
# CB's 2015 tree vs BBA's 2018 tree
cb2015_vs_bba2018 <- cophylo(cb2015, bba2018)
cairo_pdf("../fig/cb2015_vs_bba2018.pdf", height = 10, width = 6.18)
plot.cophylo(cb2015_vs_bba2018)
par(mar=c(0,0,1,0))
title("Bowern (2015) vs Bouckaert, Bowern and Atkinson (2018)")
nodelabels.cophylo(round(cb2015_df$posterior, 2), cb2015_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(bba2018_df$posterior, 2), bba2018_df$node, cex = .7, adj = 0, which = "right")
dev.off()
# Cogs tree vs BBA2018
bba2018_vs_cogs <- cophylo(cogs, bba2018)
cairo_pdf("../fig/cogs_vs_bba2018.pdf", height = 10, width = 8)
plot.cophylo(bba2018_vs_cogs)
par(mar=c(0,0,1,0))
title("Cognates only vs Bouckaert, Bowern and Atkinson (2018)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(bba2018_df$posterior,2), bba2018_df$node, cex = .7, adj = 1, which = "right")
dev.off()
# Cogs tree vs CB2015
# Cogs tree seems closer to 2018 tree than 2015 tree
cb2015_vs_cogs <- cophylo(cogs, cb2015)
cairo_pdf("../fig/cogs_vs_cb2015.pdf", height = 10, width = 6.18)
plot.cophylo(cb2015_vs_cogs)
par(mar=c(0,0,1,0))
title("Cognates only vs Bowern (2015)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(cb2015_df$posterior,2), cb2015_df$node, cex = .7, adj = 1, which = "right")
dev.off()
### READING MORE TREES ###
## All data ##
linked_all <- ape::read.nexus("../trees/WPN_linked_alldata_2020-11-18_ch7-10_MCCT.tree")
sep_all_cogs <- ape::read.nexus("../trees/WPN_separate_alldata_2020-11-18_ch2_7.WPN_cognates.MCCT.tree")
sep_all_phon <- ape::read.nexus("../trees/WPN_separate_alldata_2020-11-18_ch2_7.default.MCCT.tree")
linked_all_df <- treeio::read.beast("../trees/WPN_linked_alldata_2020-11-18_ch7-10_MCCT.tree") %>%
treeio::as_tibble(linked_all_df) %>% full_join(tidytree::as_tibble(linked_all))
sep_all_cogs_df <- treeio::read.beast("../trees/WPN_separate_alldata_2020-11-18_ch2_7.WPN_cognates.MCCT.tree") %>%
treeio::as_tibble(sep_all_cogs_df) %>% full_join(tidytree::as_tibble(sep_all_cogs))
sep_all_phon_df <- treeio::read.beast("../trees/WPN_separate_alldata_2020-11-18_ch2_7.default.MCCT.tree") %>%
treeio::as_tibble(sep_all_phon_df) %>% full_join(tidytree::as_tibble(sep_all_phon))
## Binary biphone data removed ##
linked <- ape::read.nexus("../trees/WPN_linked_2020-11-03_MCCT.trees")
sep_cogs <- ape::read.nexus("../trees/WPN_separate_2020-11-18.WPN_cognates.MCCT.trees")
sep_phon <- ape::read.nexus("../trees/WPN_separate_2020-11-18.WPN_phonotactics.MCCT.trees")
linked_df <- treeio::read.beast("../trees/WPN_linked_2020-11-03_MCCT.trees") %>%
treeio::as_tibble(linked_df) %>% full_join(tidytree::as_tibble(linked))
sep_cogs_df <- treeio::read.beast("../trees/WPN_separate_2020-11-18.WPN_cognates.MCCT.trees") %>%
treeio::as_tibble(sep_cogs_df) %>% full_join(tidytree::as_tibble(sep_cogs))
sep_phon_df <- treeio::read.beast("../trees/WPN_separate_2020-11-18.WPN_phonotactics.MCCT.trees") %>%
treeio::as_tibble(sep_phon_df) %>% full_join(tidytree::as_tibble(sep_phon))
#### MORE PLOTTING ####
## Cognates only vs all data, linked model ##
cogs_vs_linked_all <- cophylo(cogs, linked_all)
cairo_pdf("../fig/cogs_vs_linked_all.pdf", height = 10, width = 8)
plot.cophylo(cogs_vs_linked_all)
par(mar=c(0,0,1,0))
title("Cognates vs. all data linked")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
bba2018_vs_linked_all <- cophylo(bba2018, linked_all)
cairo_pdf("../fig/bba2018_vs_linked_all.pdf", height = 10, width = 6.18)
plot.cophylo(bba2018_vs_linked_all)
par(mar=c(0,0,1,0))
title("Bouckaert, Bowern and Atkinson (2018) vs. all data linked")
nodelabels.cophylo(round(bba2018_df$posterior,2), bba2018_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## All data separate: cognates element vs phonotactics element ##
sep_all_cogs_vs_sep_all_phon <- cophylo(sep_all_cogs, sep_all_phon)
cairo_pdf("../fig/separate_cogs_vs_phonotactics_alldata.pdf", height = 10, width = 6.18)
plot.cophylo(sep_all_cogs_vs_sep_all_phon)
par(mar=c(0,0,1,0))
title("Separate (all data): cognates element vs phonotactics element")
nodelabels.cophylo(round(sep_all_cogs_df$posterior, 2), sep_all_cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(sep_all_phon_df$posterior, 2), sep_all_phon_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## Cognates only vs linked model (binary biphone data removed)
cogs_vs_linked <- cophylo(cogs, linked)
cairo_pdf("../fig/cogs_vs_linked.pdf", height = 10, width = 6.18)
plot.cophylo(cogs_vs_linked)
par(mar=c(0,0,1,0))
title("Cognates vs. linked model (binary biphone data removed)")
nodelabels.cophylo(round(cogs_df$posterior,2), cogs_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 1, which = "right")
dev.off()
## Linked models with vs without binary biphone data
linked_all_vs_linked <- cophylo(linked_all, linked)
cairo_pdf("../fig/linked_all_vs_linked.pdf", height = 10, width = 6.18)
plot.cophylo(linked_all_vs_linked)
par(mar=c(0,0,1,0))
title("Linked models with vs without binary biphone data")
nodelabels.cophylo(round(linked_all_df$posterior,2), linked_all_df$node, cex = .7, adj = 0, which = "left")
nodelabels.cophylo(round(linked_df$posterior,2), linked_df$node, cex = .7, adj = 1, which = "right")
dev.off()
